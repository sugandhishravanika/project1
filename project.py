# -*- coding: utf-8 -*-
"""project

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-oV7HyYJG6RQWPGdGCWAGC9FDUzQUejT

week-3
consider a dataset and infer the realtion with the help of sifferent plots
"""

import pandas as pd
import matplotlib.pyplot as plt
mtcars=pd.read_csv("/content/mtcars.csv")
mtcars.head()

plt.hist(mtcars['mpg'],bins=10)
plt.hist(mtcars['hp'],bins=10)
plt.show()

plt.scatter(x='mpg',y='hp',data=mtcars)
plt.xlabel("miles per gallon")
plt.ylabel("horse power")
plt.show()

import matplotlib.pyplot as plt
plt.boxplot(mtcars['mpg'])
plt.show()

import matplotlib.pyplot as plt
x=mtcars['hp']
y=mtcars['mpg']
plt.bar(x,y,width=2)
plt.show()

import pandas as pd
import matplotlib.pyplot as plt
titanic=pd.read_csv("/content/titanic.csv")
titanic.head()

plt.hist(titanic['Pclass'],width=5)
plt.show()

plt.scatter(x='Age',y='Parch',data=titanic)
plt.xlabel("Age")
plt.show()

import matplotlib.pyplot as plt
plt.boxplot(titanic['PassengerId'])
plt.show()

import matplotlib.pyplot as plt
x=titanic['Age']
y=titanic['Fare']
plt.bar(x,y,width=2)
plt.show()

"""WEEK-4
use relvent python package to compute centeral tendency for the parameters
"""

import pandas as pd
from scipy import stats
import matplotlib.pyplot as plt
import numpy as np
data=pd.read_csv("/content/mtcars.csv")
data.head()

mean=data['cyl'].mean()
median=data['am'].median()
mode=stats.mode(data['mpg'])
print("central tendency")
print(mean)
print(median)
print(mode)

data_range=np.ptp(data['gear'])
variance=np.var(data['gear'])
std_devation=np.std(data['gear'])
iqr=np.percentile(data['gear'],75)
print("dispersion")
print(data_range)
print(variance)
print(std_devation)
print("iqr",iqr)

import seaborn as sns
plt.figure(figsize=(10,5))

plt.subplot(131)
sns.histplot(data['hp'], kde=True)
plt.title("Histogram of hp")

plt.subplot(132)
sns.boxplot(x='hp', data=data)
plt.title("Box Plot of hp")
plt.show()

"""WEEK-5
Dealing with missing values with different approaches Outliers
Detecting outliers.
● univariate outlier detection
● bivariate outlier detection
"""

import numpy as np
import pandas as  pd
data=pd.read_csv("/content/housing.csv")
data.head()

missing_values = data.isnull().sum()
print("Missing Values:\n", missing_values)

from scipy import stats
import pandas as pd
import pandas as pd
df=pd.read_csv('/content/titanic.csv')
df.describe()
zscore=stats.zscore(df['Pclass'])
threshold=2
outlier=abs(zscore)>threshold
print(outlier)

import matplotlib.pyplot as plt
import pandas as pd
data = {
'PassengerId': [101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 1000]
}
df = pd.DataFrame(data)
z_scores = (df['PassengerId'] - df['PassengerId'].mean()) / df['PassengerId'].std()
threshold = 3
outliers = df[(z_scores > threshold) | (z_scores < -threshold)]
plt.figure(figsize=(8, 6))
plt.plot(df.index, df['PassengerId'], 'bo', label='Data Points')
plt.plot(outliers.index, outliers['PassengerId'], 'ro', label='Outliers')
plt.xlabel("Index")
plt.ylabel("PassengerId")
plt.legend()
plt.show()

import matplotlib.pyplot as plt
import pandas as pd
df = pd.read_csv('/content/titanic.csv')
plt.scatter(x='Pclass',y='PassengerId',data=df)
plt.xlabel(" miles per gallon")
plt.ylabel("index ")
plt.show()

"""# **week=6**

split training and testing data sets inPython using train_test_split() of \
sci-kitlearn.Explore the optionsof train_test_split()
"""

from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
iris=load_iris()
x,y=iris.data,iris.target
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.5,random_state=42)
print("X train data :",x_train)
print("X test data :",x_test)
print("y train data :",y_train)
print("y test data :",y_test)

